{"version":3,"sources":["components/CardComponent.js","components/Header.js","constants/CONSTANTS.js","store/actions.js","components/Blogs.js","components/ViewBlog.js","App.js","store/store.js","store/reducers.js","index.js"],"names":["CardComponent","title","body","email","id","clickable","Card","className","style","margin","maxWidth","target","to","pathname","CardContent","aria-label","href","React","memo","Header","props","align","children","CONSTANTS","TITLE","LOAD_COMMENTS","COMMENTS","SET_BLOGS","SET_POST","SET_COMMENTS","FILTER_BLOGS","SET_SEARCH_BLOG_TEXT","BLOG_URL","COMMENTS_URL","setFilteredBlogs","blogs","type","payload","useStyles","makeStyles","root","padding","display","alignItems","width","input","marginLeft","flex","iconButton","Blogs","classes","dispatch","useDispatch","useSelector","state","filteredBlog","searchBlogText","searchBlog","useEffect","fetch","then","res","json","batch","setBlogs","catch","err","console","log","filterBlogs","e","key","filter","blog","toLocaleLowerCase","includes","Fragment","Paper","InputBase","placeholder","onKeyDown","onChange","text","value","IconButton","onClick","length","map","ViewBlog","post","comments","blogId","useLocation","split","loadComments","useCallback","setComments","Helmet","comment","name","Button","variant","color","App","middlewares","exact","path","component","reducers","combineReducers","action","applyMiddleware","thunk","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d867632.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction CardComponent({title, body, email, id, clickable}) {\r\n    return (\r\n        <Card className=\"card\" style={email && {margin: \"10px\", maxWidth: \"100%\"}}>\r\n            <div className=\"card-container\">\r\n                {\r\n                    clickable ?\r\n                    <Link\r\n                    target=\"_blank\"\r\n                    key={ \"link-\" + id }\r\n                    to={ { pathname: \"/\" + id } }>\r\n                        <CardContent>\r\n                            <h4 aria-label=\"blog title\">{title}</h4>\r\n                            <p className=\"content\" aria-label=\"message\">{body}</p>\r\n                        </CardContent>\r\n                    </Link>\r\n                    :\r\n                    <CardContent>\r\n                        <h4 aria-label=\"blog title\">{title}</h4>\r\n                        {email && <a href={`mailto:${email}`}>{email}</a>}\r\n                        <p className=\"content\" aria-label=\"message\">{body}</p>\r\n                    </CardContent>\r\n                }\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default React.memo(CardComponent);","function Header(props) {\r\n    return (\r\n        <header align=\"center\">\r\n            { props.children }\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header","const CONSTANTS = {\r\n    /* Application Content data */\r\n    TITLE: \"Blog App\",\r\n    LOAD_COMMENTS: \"Load Comments\",\r\n    COMMENTS: \"Comments\",\r\n\r\n    /* Action items*/\r\n    SET_BLOGS: \"GET_BLOGS\",\r\n    SET_POST: \"GET_POST\",\r\n    SET_COMMENTS: \"GET_COMMENTS\",\r\n    FILTER_BLOGS: \"FILTER_BLOGS\",\r\n    SET_SEARCH_BLOG_TEXT: \"SET_SEARCH_BLOG_TEXT\",\r\n\r\n    /* Links */\r\n    BLOG_URL: \"https://jsonplaceholder.typicode.com/posts/\",\r\n    COMMENTS_URL: \"https://jsonplaceholder.typicode.com/comments?postId=\"\r\n}\r\n\r\nexport default CONSTANTS;","import CONSTANTS from \"../constants/CONSTANTS\"\r\n\r\nexport const setBlogs = (blogs) => {\r\n    return {\r\n        type: CONSTANTS.SET_BLOGS,\r\n        payload: blogs\r\n    }\r\n}\r\n\r\nexport const setFilteredBlogs = (blogs) => {\r\n    return {\r\n        type: CONSTANTS.FILTER_BLOGS,\r\n        payload: blogs\r\n    }\r\n}\r\n\r\nexport const setSearchText = (text) => {\r\n    return {\r\n        type: CONSTANTS.SET_SEARCH_BLOG_TEXT,\r\n        payload: text\r\n    }\r\n}\r\n\r\nexport const setPost = (post) => {\r\n    return {\r\n        type: CONSTANTS.SET_POST,\r\n        payload: post\r\n    }\r\n}\r\n\r\nexport const setComments = (comments) => {\r\n    return {\r\n        type: CONSTANTS.SET_COMMENTS,\r\n        payload: comments\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { batch, useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CardComponent from './CardComponent';\r\nimport Header from './Header';\r\nimport CONSTANTS from '../constants/CONSTANTS';\r\nimport { setBlogs, setFilteredBlogs, setSearchText } from '../store/actions';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: 400,\r\n      margin: '0 auto'\r\n    },\r\n    input: {\r\n      marginLeft: 8,\r\n      flex: 1,\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n    }\r\n});\r\n\r\nfunction Blogs() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const blogs = useSelector(state => state.blogs);\r\n    const filteredBlog = useSelector(state => state.filteredBlog);\r\n    const searchBlogText = useSelector(state => state.searchBlog);\r\n\r\n    useEffect(() => {\r\n        fetch(CONSTANTS.BLOG_URL)\r\n        .then(res => res.json())\r\n        .then(blogs => {\r\n            batch(() => {\r\n                dispatch(setBlogs(blogs));\r\n                dispatch(setFilteredBlogs(blogs));\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n    }, [dispatch]);\r\n\r\n    const filterBlogs = (e) => {\r\n        if (!e.key || e.key === 'Enter') {\r\n            if(!searchBlogText) {\r\n                dispatch(setFilteredBlogs(blogs));\r\n            } else {\r\n                const payload = blogs.filter(blog => blog.title?.toLocaleLowerCase().includes(searchBlogText.toLocaleLowerCase()));\r\n                dispatch(setFilteredBlogs(payload));\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Header >\r\n                <h1 className=\"header\" align=\"center\">Blogs</h1>\r\n            </Header>\r\n            <div className=\"searchbar\">\r\n                <Paper className={classes.root}>            \r\n                    <InputBase \r\n                        className={classes.input}\r\n                        placeholder=\"Search Blogs\"\r\n                        onKeyDown={filterBlogs}\r\n                        aria-label=\"Search Blogs\"\r\n                        onChange={e => dispatch(setSearchText(e.target.value))}/>\r\n                    <IconButton className={classes.iconButton} aria-label=\"Search\" onClick={filterBlogs}>\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                </Paper>\r\n            </div>\r\n\r\n            { filteredBlog.length > 0 && filteredBlog.map(blog => <CardComponent \r\n                title={blog?.title} \r\n                body={blog?.body} \r\n                id={blog?.id} \r\n                key={blog?.id}\r\n                clickable />) }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Blogs;","import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Button } from '@material-ui/core';\r\nimport CONSTANTS from '../constants/CONSTANTS';\r\nimport CardComponent from './CardComponent';\r\nimport { setPost, setComments } from '../store/actions';\r\n\r\nfunction ViewBlog() {\r\n    const dispatch = useDispatch();\r\n    const blog = useSelector(state => state.post);\r\n    const comments = useSelector(state => state.comments);\r\n\r\n    const location = useLocation()\r\n    let blogId = location.pathname;\r\n    blogId = blogId.split(\"/\");\r\n    blogId = blogId[1];\r\n\r\n    useEffect(() => {\r\n        fetch(CONSTANTS.BLOG_URL + blogId)\r\n        .then(res => res.json())\r\n        .then(blog =>dispatch(setPost(blog)))\r\n        .catch(err => console.log(err));\r\n    }, [blogId, dispatch])\r\n\r\n    const loadComments = useCallback(() => {\r\n        fetch(CONSTANTS.COMMENTS_URL + blogId)\r\n        .then(res => res.json())\r\n        .then(comments =>dispatch(setComments(comments)))\r\n        .catch(err => console.log(err));\r\n    }, [blogId, dispatch]);\r\n\r\n    return (\r\n        blog.title ? <div>\r\n            <Helmet>\r\n                <title>{blog.title}</title>\r\n            </Helmet>\r\n\r\n            <h2 aria-label=\"blog name\">{blog.title}</h2>\r\n            <p aria-label=\"blog content\">{blog.body}</p>\r\n            \r\n            { comments.length > 0 ?\r\n                <React.Fragment>\r\n                    <h3>{CONSTANTS.COMMENTS}</h3>\r\n                    {comments.map(comment => <CardComponent\r\n                        body={comment.body}\r\n                        title={comment.name}\r\n                        email={comment.email}\r\n                        id={comment.id}\r\n                        key={comment.id} />)}\r\n                </React.Fragment>\r\n                :\r\n                <Button aria-label=\"load comments\" variant=\"contained\" color=\"primary\" onClick={loadComments}>{CONSTANTS.LOAD_COMMENTS}</Button>\r\n            }\r\n        </div> \r\n        : \r\n        <></>\r\n    );\r\n}\r\n\r\nexport default ViewBlog;","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport Blogs from './components/Blogs';\nimport ViewBlog from './components/ViewBlog';\nimport './App.css';\nimport CONSTANTS from './constants/CONSTANTS';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Helmet>\n          <title>{CONSTANTS.TITLE}</title>\n        </Helmet>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Blogs} />\n            <Route exact path=\"/*\" component={ViewBlog} />\n          </Switch>\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport reducers from \"./reducers\";\r\n\r\nlet middlewares;\r\n\r\nif (process.env.NODE_ENV === `development`) {\r\n    middlewares = applyMiddleware(thunk, logger);\r\n} else {\r\n    middlewares = applyMiddleware(thunk);\r\n}\r\n\r\nconst store = createStore(reducers, middlewares);\r\n\r\nexport default store;\r\n","import { combineReducers } from \"redux\"\r\nimport CONSTANTS from \"../constants/CONSTANTS\"\r\n\r\nconst blogs = (state = [], action) => {\r\n    switch(action.type) {\r\n        case CONSTANTS.SET_BLOGS:\r\n            state = action.payload;\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nconst filteredBlog = (state = [], action) => {\r\n    switch(action.type) {\r\n        case CONSTANTS.FILTER_BLOGS:\r\n            state = action.payload;\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nconst searchBlog = (state = \"\", action) => {\r\n    switch(action.type) {\r\n        case CONSTANTS.SET_SEARCH_BLOG_TEXT:\r\n            state = action.payload\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return state;\r\n}\r\n\r\nconst post = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case CONSTANTS.SET_POST:\r\n            state = action.payload;\r\n            break;\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nconst comments = (state = [], action) => {\r\n    switch(action.type) {\r\n        case CONSTANTS.SET_COMMENTS:\r\n            state = action.payload\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nconst reducers = combineReducers({\r\n    blogs,\r\n    filteredBlog,\r\n    searchBlog,\r\n    post,\r\n    comments\r\n})\r\n\r\nexport default reducers;","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}